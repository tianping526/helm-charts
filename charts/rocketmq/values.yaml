clusterName: "DefaultCluster"

image:
  repository: "apache/rocketmq"
  tag: "5.3.3"
  pullPolicy: IfNotPresent
  pullSecrets: []
  # - name: secretName

podSecurityContext:
  fsGroup: 3000
  runAsUser: 3000

broker:
  size:
    master: 3
    replica: 1

  # podSecurityContext: {}
  # containerSecurityContext: {}

  master:
    brokerRole: SYNC_MASTER
    jvm:
      maxHeapSize: 2048M
      # javaOptsOverride: ""
    resources:
      limits:
        cpu: 4
        memory: 16Gi
      requests:
        cpu: 400m
        memory: 3Gi

  replica:
    jvm:
      maxHeapSize: 2048M
      # javaOptsOverride: ""
    resources:
      limits:
        cpu: 4
        memory: 16Gi
      requests:
        cpu: 400m
        memory: 3Gi

  hostNetwork: false

  persistence:
    enabled: true
    size: 20Gi
#    storageClass: "gp2"

  aclConfigMapEnabled: false
  aclConfig: |
    globalWhiteRemoteAddresses:
      - '*'
      - 10.*.*.*
      - 192.168.*.*

  config:
    ## brokerClusterName, brokerName, brokerRole, and brokerId are automatically generated by the built-in script.
    deleteWhen: "04"
    fileReservedTime: "720"  # 30 days
    flushDiskType: "ASYNC_FLUSH"
    waitTimeMillsInSendQueue: "1000"
    # aclEnable: true
    allAckInSyncStateSet: true

  podDisruptionBudget:
    # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    enabled: true
    minAvailable:
    maxUnavailable: 1
    unhealthyPodEvictionPolicy: IfHealthyBudget

  affinityOverride: {}
  tolerations: []
  nodeSelector: {}

  ## broker.readinessProbe
  readinessProbe:
    tcpSocket:
      port: main
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 6

nameserver:
  replicaCount: 3

  jvm:
    maxHeapSize: 600M
    # javaOptsOverride: ""

  resources:
    limits:
      cpu: 2
      memory: 6Gi
      ephemeral-storage: 8Gi
    requests:
      cpu: 100m
      memory: 1Gi
      ephemeral-storage: 1Gi

  persistence:
    enabled: false
    size: 20Gi
#    storageClass: "gp2"

  affinityOverride: {}
  tolerations: []
  nodeSelector: {}

  podDisruptionBudget:
    # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    enabled: true
    minAvailable: 60%
    maxUnavailable:
    unhealthyPodEvictionPolicy: IfHealthyBudget

  ## nameserver.readinessProbe
  readinessProbe:
    tcpSocket:
      port: main
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 6

  ## nameserver.service
  service:
    annotations: {}
    type: ClusterIP

proxy:
  enabled: true
  replicaCount: 3
  jvm:
    maxHeapSize: 1300M
    # javaOptsOverride: ""

  resources:
    limits:
      cpu: 2
      memory: 6Gi
    requests:
      cpu: 100m
      memory: 2Gi

  affinityOverride: {}
  tolerations: []
  nodeSelector: {}

  ## proxy.readinessProbe
  readinessProbe:
    tcpSocket:
      port: main
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 6

  ## proxy.service
  service:
    annotations: {}
    type: ClusterIP
    clusterIP: None

  podDisruptionBudget:
    # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    enabled: true
    minAvailable: 60%
    maxUnavailable:
    unhealthyPodEvictionPolicy: IfHealthyBudget

dashboard:
  enabled: true
  replicaCount: 1
  image:
    repository: "apacherocketmq/rocketmq-dashboard"
    pullPolicy: IfNotPresent
    tag: "2.0.1"

  auth:
    enabled: true
    users:
      - name: admin
        password: admin
        isAdmin: true
      - name: user01
        password: userPass

  jvm:
    maxHeapSize: 600M

  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 20m
      memory: 1Gi

  ## dashboard.readinessProbe
  readinessProbe:
    failureThreshold: 6
    httpGet:
      path: /
      port: http
  livenessProbe: {}

  service:
    annotations: {}
    type: ClusterIP
    # nodePort: 31007

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,124.160.30.50
    hosts:
      - host: rocketmq-dashboard.example.com
    tls: []
    #  - secretName: example-tls
    #    hosts:
    #      - rocketmq-dashboard.example.com

## controller mode is an experimental feature
controllerModeEnabled: true
controller:
  enabled: true
  replicaCount: 3
  jvm:
    maxHeapSize: 600M
    # javaOptsOverride: ""
  resources:
    limits:
      cpu: 2
      memory: 6Gi
    requests:
      cpu: 100m
      memory: 1Gi
  persistence:
    enabled: true
    size: 20Gi
    accessModes:
      - ReadWriteOnce

  ## controller.service
  service:
    annotations: {}

  ## controller.config
  config:
    controllerDLegerGroup: group1
    enableElectUncleanMaster: false
    notifyBrokerRoleChanged: true

  ## controller.readinessProbe
  readinessProbe:
    tcpSocket:
      port: main
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 6

  podDisruptionBudget:
    # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    enabled: true
    minAvailable: 60%
    maxUnavailable:
    unhealthyPodEvictionPolicy: IfHealthyBudget
